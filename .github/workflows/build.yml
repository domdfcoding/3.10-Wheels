---
name: Linux Build

on:
  push:
    branches: ["master"]

jobs:
  numpy:
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.21.0rc2"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3"}
         - {platform: "ubuntu-20.04", numpy-version: "1.19.5"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install "setuptools<49.2.0" "wheel>=0.36.2"
          python -m pip install cython --upgrade

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps numpy==${{ matrix.version.numpy-version }} --no-build-isolation --wheel-dir ./wheels/numpy --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/*.whl

  pandas:
    needs: numpy
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}-pd-${{ matrix.version.pandas-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", pandas-version: "1.3.0rc1"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", pandas-version: "1.2.4"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", pandas-version: "1.1.5"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", pandas-version: "1.0.5"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Download Numpy Wheel
        uses: actions/download-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/


      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install setuptools "wheel>=0.36.2"
          python -m pip install cython --upgrade
          python -m pip install ./wheels/numpy/*.whl

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps pandas==${{ matrix.version.pandas-version }} --no-build-isolation --wheel-dir ./wheels/pandas --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "pandas-${{ matrix.version.pandas-version }}-${{ matrix.version.platform }}"
          path: ./wheels/pandas/*.whl

  matplotlib:
    needs: numpy
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}-mpl-${{ matrix.version.matplotlib-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", matplotlib-version: "3.4.2"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", matplotlib-version: "3.3.4"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", matplotlib-version: "3.2.2"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Download Numpy Wheel
        uses: actions/download-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install setuptools "wheel>=0.36.2" "certifi>=2020.06.20"
          python -m pip install ./wheels/numpy/*.whl

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps matplotlib==${{ matrix.version.matplotlib-version }} --no-build-isolation --wheel-dir ./wheels/matplotlib --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "matplotlib-${{ matrix.version.matplotlib-version }}-${{ matrix.version.platform }}"
          path: ./wheels/matplotlib/*.whl

  scipy:
    needs: numpy
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}-scipy-${{ matrix.version.scipy-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", scipy-version: "1.7.0rc1"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", scipy-version: "1.6.3"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", scipy-version: "1.5.4"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Download Numpy Wheel
        uses: actions/download-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install "setuptools<=51.0.0" "wheel>=0.36.2" "pybind11>=2.4.3"
          python -m pip install ./wheels/numpy/*.whl

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps scipy==${{ matrix.version.scipy-version }} --no-build-isolation --wheel-dir ./wheels/scipy --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "scipy-${{ matrix.version.scipy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/scipy/*.whl

  cftime:
    needs: numpy
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}-cftime-${{ matrix.version.cftime-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", cftime-version: "1.5.0"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", cftime-version: "1.4.0"}
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", cftime-version: "1.3.0"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Download Numpy Wheel
        uses: actions/download-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install "setuptools>=41.2" "wheel>=0.36.2"
          python -m pip install cython --upgrade
          python -m pip install ./wheels/numpy/*.whl

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps cftime==${{ matrix.version.cftime-version }} --no-build-isolation --wheel-dir ./wheels/cftime --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "cftime-${{ matrix.version.cftime-version }}-${{ matrix.version.platform }}"
          path: ./wheels/cftime/*.whl

  netCDF4:
    needs:
      - numpy
      - cftime
    name: "Python 3.10-${{ matrix.version.platform }}-np-${{ matrix.version.numpy-version }}-netcdf4-${{ matrix.version.netcdf4-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", numpy-version: "1.20.3", netcdf4-version: "1.5.6", cftime-version: "1.5.0"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Download Numpy Wheel
        uses: actions/download-artifact@v2
        with:
          name: "numpy-${{ matrix.version.numpy-version }}-${{ matrix.version.platform }}"
          path: ./wheels/numpy/

      - name: Download cftime Wheel
        uses: actions/download-artifact@v2
        with:
          name: "cftime-${{ matrix.version.cftime-version }}-${{ matrix.version.platform }}"
          path: ./wheels/cftime/

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install "setuptools>=41.2" "wheel>=0.36.2"
          python -m pip install cython --upgrade
          python -m pip install ./wheels/numpy/*.whl
          python -m pip install ./wheels/cftime/*.whl
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install libhdf5-dev netcdf-bin libnetcdf-dev

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps netcdf4==${{ matrix.version.netcdf4-version }} --no-build-isolation --wheel-dir ./wheels/netcdf4 --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "netcdf4-${{ matrix.version.netcdf4-version }}-${{ matrix.version.platform }}"
          path: ./wheels/netcdf4/*.whl

  lxml:
    name: "Python 3.10-${{ matrix.version.platform }}-lxml-${{ matrix.version.lxml-version }}"
    runs-on: ${{ matrix.version.platform }}

    strategy:
      fail-fast: False
      matrix:
        version:
         - {platform: "ubuntu-20.04", lxml-version: "4.6.3"}

    steps:
      - name: Setup Python üêç
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10.0-beta.2"

      - name: Install dependencies üîß
        run: |
          python -VV
          python -m site
          python -m pip install pip --upgrade
          python -m pip install "setuptools>=41.2" "wheel>=0.36.2"
          python -m pip install cython --upgrade
          sudo apt-get install libxml2-dev libxslt-dev
          git clone https://github.com/lxml/lxml

      - name: "Build Wheel"
        run: "python -m pip wheel --no-deps ./lxml --no-build-isolation --wheel-dir ./wheels/lxml --verbose"

      - name: "Upload Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: "lxml-${{ matrix.version.lxml-version }}-${{ matrix.version.platform }}"
          path: ./wheels/lxml/*.whl
